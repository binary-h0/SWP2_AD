import cv2
import sys
from PyQt5.QtCore import *
from PyQt5.QtWidgets import *
from PyQt5.QtGui import *

class ShowVideo(QObject):

    flag = 0

    camera = cv2.VideoCapture(0)

    ret, image = camera.read()
    height, width = image.shape[:2]

    VideoSignal1 = pyqtSignal(QImage)
    VideoSignal2 = pyqtSignal(QImage)

    def __init__(self, parent=None):
        super(ShowVideo, self).__init__(parent)

    @pyqtSlot()
    def startVideo(self):
        global image

        run_video = True
        while run_video:
            ret, image = self.camera.read()
            color_swapped_image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)

            qt_image1 = QImage(color_swapped_image.data,
                                    self.width,
                                    self.height,
                                    color_swapped_image.strides[0],
                                    QImage.Format_RGB888)
            self.VideoSignal1.emit(qt_image1)


            if self.flag:
                img_gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
                img_canny = cv2.Canny(img_gray, 50, 100)

                qt_image2 = QImage(img_canny.data,
                                         self.width,
                                         self.height,
                                         img_canny.strides[0],
                                         QImage.Format_Grayscale8)

                self.VideoSignal2.emit(qt_image2)


            loop = QEventLoop()
            QTimer.singleShot(25, loop.quit) #25 ms
            loop.exec_()

class ImageViewer(QWidget):
    def __init__(self, parent=None):
        super(ImageViewer, self).__init__(parent)
        self.image = QImage()
        self.setAttribute(Qt.WA_OpaquePaintEvent)

    def paintEvent(self, event):
        painter = QPainter(self)
        painter.drawImage(0, 0, self.image)
        self.image = QImage()

    def initUI(self):
        self.setWindowTitle('Test')

    @pyqtSlot(QImage)
    def setImage(self, image):
        if image.isNull():
            print("Viewer Dropped frame!")

        self.image = image
        if image.size() != self.size():
            self.setFixedSize(image.size())
        self.update()

    def stickerButtonClicked(self):
        sender = self.sender()
        print(int(sender.text())-1)
        return int(sender.text())-1

    def makeUpButtonClicked(self):
        sender = self.sender()
        print(int(sender.text()) - 1)
        return int(sender.text()) - 1



if __name__ == '__main__':
    app = QApplication(sys.argv)

    thread = QThread()
    thread.start()
    vid = ShowVideo()
    vid.moveToThread(thread)

    image_viewer1 = ImageViewer()

    vid.VideoSignal1.connect(image_viewer1.setImage)

    stickerLabel = QLabel("STICKER")
    stickerLabel.setAlignment(Qt.AlignCenter)

    stickerButton = [x for x in range(0, 5)]

    for i in range(5):
        stickerButton[i] = QPushButton()
        stickerButton[i].setText("{}".format(i + 1))
        stickerButton[i].setFixedSize(35, 35)

    stickerLabel.setStyleSheet('font-size:30px')

    # MakeUp Components
    makeUpLabel = QLabel("MAKE UP")
    makeUpLabel.setAlignment(Qt.AlignCenter)

    makeUpButton = [x for x in range(0, 5)]

    for i in range(5):
        makeUpButton[i] = QPushButton()
        makeUpButton[i].setText("{}".format(i + 1))
        makeUpButton[i].setFixedSize(35, 35)

    makeUpLabel.setStyleSheet('font-size:30px')

    # Quit Button
    quitButton = QToolButton()
    quitButton.setText("Quit")
    quitButton.setFixedSize(70, 35)

    # Button Clicked
    for i in range(5):
        stickerButton[i].clicked.connect(image_viewer1.stickerButtonClicked)
        makeUpButton[i].clicked.connect(image_viewer1.makeUpButtonClicked)

    # Layout Setting
    mainLayout = QHBoxLayout()

    vbox = QVBoxLayout()
    hbox = QHBoxLayout()
    tmp = QLabel()
    hbox.addWidget(tmp)

    stickerLayout = QHBoxLayout()
    for i in range(5):
        stickerLayout.addWidget(stickerButton[i])

    makeUpLayout = QHBoxLayout()
    for i in range(5):
        makeUpLayout.addWidget(makeUpButton[i])

    filterLayout = QVBoxLayout()
    filterLayout.addWidget(stickerLabel)
    filterLayout.addLayout(stickerLayout)
    filterLayout.addWidget(makeUpLabel)
    filterLayout.addLayout(makeUpLayout)

    vbox.addLayout(filterLayout)
    vbox.addLayout(hbox)

    vbox.addWidget(quitButton, alignment=Qt.AlignRight)

    mainLayout.addWidget(image_viewer1)
    mainLayout.addLayout(vbox)

    layout_widget = QWidget()
    layout_widget.setLayout(mainLayout)

    main_window = QMainWindow()
    main_window.setCentralWidget(layout_widget)
    main_window.show()
    vid.startVideo()
    sys.exit(app.exec_())
